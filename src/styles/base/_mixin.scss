/* All text input selector */
$text-input:"input[type='email'],
  input[type='date'],
  input[type='datetime'],
  input[type='datetime-local'],
  input[type='month'],
  input[type='number'],
  input[type='password'],
  input[type='search'],
  input[type='tel'],
  input[type='text'],
  input[type='time'],
  input[type='url'],
  input[type='week'],
  input[type='file']";

$button-input: "input[type='button'],
  input[type='reset'],
  input[type='submit']";
  
$heading-tag:"h1,h2,h3,h4,h5,h6";

@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
@mixin rem($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*16}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  } 

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  } 
  @if $rem-unit == true {
    #{$property}: $remValues; 
  }
  
  @if $rem-unit == false {
    #{$property}: $pxValues; 
  }
  
}

@mixin clearfix {
  display: block;
  clear: both;
  &:after {
    content: ".";
    display: block;
    clear: both;
    visibility: hidden;
    line-height: 0;
    height: 0;
  }
}

@mixin respond-to($media) {
  @if $media == handhelds {
    @media only screen and (max-width: $break-small) { @content; }
  }
  @else if $media == medium-screens {
    @media only screen and (min-width: $break-small + 1) and (max-width: $break-large - 1) { @content; }
  }
  @else if $media == wide-screens {
    @media only screen and (min-width: $break-large) { @content; }
  }
}


@mixin box-shadow($shadow1: 0 0 20px rgba(0, 0, 0, 0.3), $shadow2:false, $shadow3:false, $shadow4:false, $shadow5:false) {
  $params: $shadow1;
  @if $shadow2 != false { $params: $shadow1, $shadow2; }
  @if $shadow3 != false { $params: $shadow1, $shadow2, $shadow3; }
  @if $shadow4 != false { $params: $shadow1, $shadow2, $shadow3, $shadow4; }
  @if $shadow5 != false { $params: $shadow1, $shadow2, $shadow3, $shadow4, $shadow5; }

  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  box-shadow: $params;
}

@mixin font-size($font-size:1, $line-height: $line-height){
  @include rem(font-size, $font-size);
  @include rem(line-height, $font-size*$line-height);
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}  
}



@mixin button($color: $primary-color, $text: $white) {
  background: $color;
  color: $text;
  border: 1px darken($color, 10%) solid;

  &:visited, &:hover, &:active {
    color: $text;
  }
  
  &:hover {
    background-color: darken($color, 10%);
  }

  &:active {
    background-color: darken($color, 15%);
  }

  &:focus, &.focus {
    box-shadow: 0 0 2px 2px rgba(darken($color, 10%), 0.3);
  }

  &:disabled, .disabled {
    color: rgba($text, 0.4);
    background: $color!important;
  }
}


@mixin grid-calc-helper($property, $columns) { 
  #{$property}: 100% / $columns-number * $columns;
}

@mixin grid-row(){
  width: 100%;
  position: relative;
  max-width: $grid-width;
  margin: 0 auto;
  @include clearfix();
  padding: 0 $gutter-width/2 0 $gutter-width/2;
}

@mixin grid-columns($columns:false, $offset:false, $mobile:false, $center:false, $gutter:true){
  float: left;
  display: block;
  position:relative;

  @if $columns!= false { @include grid-calc-helper(width, $columns); }
  @if $gutter != false { padding: 0 $gutter-width/2 0 $gutter-width/2; }
  @if $offset != false { @include grid-calc-helper(margin-left, $offset); }
  @if $center != false { float:none; margin:0 auto; }

  @include respond-to(handhelds) {
    @if $mobile != false { @include grid-calc-helper(width, $mobile); }
    @else { width: 100%; }
  }

}